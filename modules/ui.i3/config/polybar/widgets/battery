#!/usr/bin/env dash

# DESCRIPTION
#  Get the battery charge and status. It beeps when the battery is low.
#  This script is meant to be used with `polybar`.

orange() {
  orange_color=$(xrdb -query | awk '/color3:/ {print $2}')
  echo "%{F$orange_color}$1%{F-}"
}

red() {
  red_color=$(xrdb -query | awk '/color1:/ {print $2}')
  echo "%{F$red_color}$1%{F-}"
}

get_icon_by_charge() {
  if [ "$1" -lt 10 ]; then
    echo " "
  elif [ "$1" -lt 25 ]; then
    echo " "
  elif [ "$1" -lt 50 ]; then
    echo " "
  elif [ "$1" -lt 75 ]; then
    echo " "
  else
    echo " "
  fi 
}

battery="/sys/class/power_supply/BAT0"
critical_battery_level=15
charge=$(cat "$battery/capacity")
wattage=$(cat "$battery/power_now" 2>/dev/null \
  | numfmt --from-unit=1 --to=si \
  | sed "s/M/W/")
prev_status=$(cat "$UII3_TMP/prev_battery_status" 2>/dev/null)
next_status=$(cat "$battery/status" | tee "$UII3_TMP/prev_battery_status") 

if [ "$next_status" = "Charging" ]; then
  icon=""
else
  icon=$(get_icon_by_charge "$charge")
fi

if [ "$next_status" = "Discharging" ] && [ "$charge" -lt "$critical_battery_level" ]; then
  espeak "Critical battery! Please recharge." 2>/dev/null &
  red "$icon $charge% $wattage"
  exit 0
fi

if [ "$prev_status" = "Discharging" ] && [ "$next_status" = "Charging" ] && [ "$charge" -lt "$critical_battery_level" ]; then
  espeak "Crisis averted, battery charging." 2>/dev/null &
fi


echo "$(orange "$icon") $charge% $(orange "") $wattage"
